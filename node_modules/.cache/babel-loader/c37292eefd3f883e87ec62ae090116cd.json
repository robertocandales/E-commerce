{"ast":null,"code":"/* eslint-disable indent */\nimport { css } from 'styled-components';\nexport const breakpoints = {\n  mobileMin: '351px',\n  mobile: '767px',\n  mobilePortrait: '320px',\n  mobileLandscape: '320px',\n  tablet: '1024px',\n  tabletPortrait: '768px',\n  tabletLandscape: '768px',\n  desktop: '1025px'\n};\nexport const respondTo = Object.keys(breakpoints).reduce((accumulator, label) => {\n  accumulator[label] = (...args) => {\n    switch (label) {\n      case 'mobileMin':\n        return css`\n          @media (max-width: ${breakpoints[label]}) {\n            ${css(...args)};\n          }\n        `;\n\n      case 'mobile':\n        return css`\n          @media (max-width: ${breakpoints[label]}) {\n            ${css(...args)};\n          }\n        `;\n\n      case 'mobilePortrait':\n        return css`\n          @media (min-width: ${breakpoints[label]}) and (max-width: ${breakpoints.mobile}) and (orientation: portrait) {\n            ${css(...args)};\n          }\n        `;\n\n      case 'mobileLandscape':\n        return css`\n          @media (min-width: ${breakpoints[label]}) and (max-width: ${breakpoints.mobile}) and (orientation: landscape) {\n            ${css(...args)};\n          }\n        `;\n\n      case 'tablet':\n        return css`\n          @media (min-width: ${breakpoints.tabletPortrait}) and (max-width: ${breakpoints.tablet}) {\n            ${css(...args)};\n          }\n        `;\n\n      case 'tabletPortrait':\n        return css`\n          @media (min-width: ${breakpoints[label]}) and (max-width: ${breakpoints.tablet}) and (orientation: portrait) {\n            ${css(...args)};\n          }\n        `;\n\n      case 'tabletLandscape':\n        return css`\n          @media (min-width: ${breakpoints[label]}) and (max-width: ${breakpoints.tablet}) and (orientation: landscape) {\n            ${css(...args)};\n          }\n        `;\n\n      case 'desktop':\n      default:\n        return css`\n          @media (min-width: ${breakpoints[label]}) {\n            ${css(...args)};\n          }\n        `;\n    }\n  };\n\n  return accumulator;\n}, {});","map":{"version":3,"sources":["/Users/robertocandales/Documents/ecommerce/frontend/src/Utils/mixins.js"],"names":["css","breakpoints","mobileMin","mobile","mobilePortrait","mobileLandscape","tablet","tabletPortrait","tabletLandscape","desktop","respondTo","Object","keys","reduce","accumulator","label","args"],"mappings":"AAAA;AACA,SAASA,GAAT,QAAoB,mBAApB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,SAAS,EAAE,OADc;AAEzBC,EAAAA,MAAM,EAAE,OAFiB;AAGzBC,EAAAA,cAAc,EAAE,OAHS;AAIzBC,EAAAA,eAAe,EAAE,OAJQ;AAKzBC,EAAAA,MAAM,EAAE,QALiB;AAMzBC,EAAAA,cAAc,EAAE,OANS;AAOzBC,EAAAA,eAAe,EAAE,OAPQ;AAQzBC,EAAAA,OAAO,EAAE;AARgB,CAApB;AAWP,OAAO,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYX,WAAZ,EAAyBY,MAAzB,CAAgC,CAACC,WAAD,EAAcC,KAAd,KAAwB;AAC/ED,EAAAA,WAAW,CAACC,KAAD,CAAX,GAAqB,CAAC,GAAGC,IAAJ,KAAa;AAChC,YAAQD,KAAR;AACE,WAAK,WAAL;AACE,eAAOf,GAAI;+BACYC,WAAW,CAACc,KAAD,CAAQ;cACpCf,GAAG,CAAC,GAAGgB,IAAJ,CAAU;;SAFnB;;AAKF,WAAK,QAAL;AACE,eAAOhB,GAAI;+BACYC,WAAW,CAACc,KAAD,CAAQ;cACpCf,GAAG,CAAC,GAAGgB,IAAJ,CAAU;;SAFnB;;AAKF,WAAK,gBAAL;AACE,eAAOhB,GAAI;+BACYC,WAAW,CAC5Bc,KAD4B,CAE5B,qBAAoBd,WAAW,CAACE,MAAO;cACvCH,GAAG,CAAC,GAAGgB,IAAJ,CAAU;;SAJnB;;AAOF,WAAK,iBAAL;AACE,eAAOhB,GAAI;+BACYC,WAAW,CAC5Bc,KAD4B,CAE5B,qBAAoBd,WAAW,CAACE,MAAO;cACvCH,GAAG,CAAC,GAAGgB,IAAJ,CAAU;;SAJnB;;AAOF,WAAK,QAAL;AACE,eAAOhB,GAAI;+BACYC,WAAW,CAACM,cAAe,qBAAoBN,WAAW,CAACK,MAAO;cACnFN,GAAG,CAAC,GAAGgB,IAAJ,CAAU;;SAFnB;;AAKF,WAAK,gBAAL;AACE,eAAOhB,GAAI;+BACYC,WAAW,CAC5Bc,KAD4B,CAE5B,qBAAoBd,WAAW,CAACK,MAAO;cACvCN,GAAG,CAAC,GAAGgB,IAAJ,CAAU;;SAJnB;;AAOF,WAAK,iBAAL;AACE,eAAOhB,GAAI;+BACYC,WAAW,CAC5Bc,KAD4B,CAE5B,qBAAoBd,WAAW,CAACK,MAAO;cACvCN,GAAG,CAAC,GAAGgB,IAAJ,CAAU;;SAJnB;;AAOF,WAAK,SAAL;AACA;AACE,eAAOhB,GAAI;+BACYC,WAAW,CAACc,KAAD,CAAQ;cACpCf,GAAG,CAAC,GAAGgB,IAAJ,CAAU;;SAFnB;AArDJ;AA2DD,GA5DD;;AA6DA,SAAOF,WAAP;AACD,CA/DwB,EA+DtB,EA/DsB,CAAlB","sourcesContent":["/* eslint-disable indent */\nimport { css } from 'styled-components';\n\nexport const breakpoints = {\n  mobileMin: '351px',\n  mobile: '767px',\n  mobilePortrait: '320px',\n  mobileLandscape: '320px',\n  tablet: '1024px',\n  tabletPortrait: '768px',\n  tabletLandscape: '768px',\n  desktop: '1025px',\n};\n\nexport const respondTo = Object.keys(breakpoints).reduce((accumulator, label) => {\n  accumulator[label] = (...args) => {\n    switch (label) {\n      case 'mobileMin':\n        return css`\n          @media (max-width: ${breakpoints[label]}) {\n            ${css(...args)};\n          }\n        `;\n      case 'mobile':\n        return css`\n          @media (max-width: ${breakpoints[label]}) {\n            ${css(...args)};\n          }\n        `;\n      case 'mobilePortrait':\n        return css`\n          @media (min-width: ${breakpoints[\n              label\n            ]}) and (max-width: ${breakpoints.mobile}) and (orientation: portrait) {\n            ${css(...args)};\n          }\n        `;\n      case 'mobileLandscape':\n        return css`\n          @media (min-width: ${breakpoints[\n              label\n            ]}) and (max-width: ${breakpoints.mobile}) and (orientation: landscape) {\n            ${css(...args)};\n          }\n        `;\n      case 'tablet':\n        return css`\n          @media (min-width: ${breakpoints.tabletPortrait}) and (max-width: ${breakpoints.tablet}) {\n            ${css(...args)};\n          }\n        `;\n      case 'tabletPortrait':\n        return css`\n          @media (min-width: ${breakpoints[\n              label\n            ]}) and (max-width: ${breakpoints.tablet}) and (orientation: portrait) {\n            ${css(...args)};\n          }\n        `;\n      case 'tabletLandscape':\n        return css`\n          @media (min-width: ${breakpoints[\n              label\n            ]}) and (max-width: ${breakpoints.tablet}) and (orientation: landscape) {\n            ${css(...args)};\n          }\n        `;\n      case 'desktop':\n      default:\n        return css`\n          @media (min-width: ${breakpoints[label]}) {\n            ${css(...args)};\n          }\n        `;\n    }\n  };\n  return accumulator;\n}, {});\n"]},"metadata":{},"sourceType":"module"}