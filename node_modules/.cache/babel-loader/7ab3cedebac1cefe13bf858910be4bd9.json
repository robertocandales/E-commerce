{"ast":null,"code":"var _jsxFileName = \"/Users/robertocandales/Documents/ecommerce/frontend/src/Components/global/Upload/UploadProduct.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Upload, Progress } from 'antd';\nimport Notification from '../../global/Notification';\nimport './styles.css';\nimport { URLbase } from '../../../Api/URLbase';\n\nconst UploadProduct = ({\n  fileList,\n  setFileList\n}) => {\n  const [defaultFileList, setDefaultFileList] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const uploadImage = async options => {\n    const {\n      onSuccess,\n      onError,\n      file,\n      onProgress\n    } = options;\n    const fmData = new FormData();\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      },\n      onUploadProgress: event => {\n        const percent = Math.floor(event.loaded / event.total * 100);\n        setProgress(percent);\n\n        if (percent === 100) {\n          setTimeout(() => setProgress(0), 1000);\n        }\n\n        onProgress({\n          percent: event.loaded / event.total * 100\n        });\n      }\n    };\n    fmData.append('image', file);\n\n    try {\n      const res = await axios.post(`${URLbase}/api/products/upload`, fmData, config);\n      console.log(res, 'res');\n\n      if (!res.data.error) {\n        Notification({\n          message: 'Producto guardado de forma existosa',\n          type: 'success'\n        });\n        setFileList(res.data);\n        onSuccess('Ok');\n      } else {\n        if (res.data.error === 'No token, authorization denied') {\n          Notification({\n            message: 'Debe iniciar sesion para poder cargar productos',\n            type: 'error'\n          });\n        }\n\n        if (res.data.error === 'Token is no valid') {\n          Notification({\n            message: 'Problemas de inicio de sesion, debe inicar sesion nuevamente',\n            type: 'error'\n          });\n        }\n      }\n\n      console.log('server res: ', res);\n    } catch (err) {\n      console.log('Eroor: ', err);\n      const error = new Error('Some error');\n      onError({\n        err\n      });\n    }\n  };\n\n  const handleOnChange = ({\n    file,\n    fileList,\n    event\n  }) => {\n    setDefaultFileList(fileList);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    accept: \"image/*\",\n    customRequest: uploadImage,\n    onChange: handleOnChange,\n    listType: \"picture-card\",\n    defaultFileList: defaultFileList,\n    className: \"image-upload-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, defaultFileList.length >= 1 ? null : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 49\n    }\n  }, \"Upload Button\")), progress > 0 ? /*#__PURE__*/React.createElement(Progress, {\n    percent: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }) : null));\n};\n\nexport default UploadProduct;","map":{"version":3,"sources":["/Users/robertocandales/Documents/ecommerce/frontend/src/Components/global/Upload/UploadProduct.js"],"names":["React","useState","axios","Upload","Progress","Notification","URLbase","UploadProduct","fileList","setFileList","defaultFileList","setDefaultFileList","progress","setProgress","uploadImage","options","onSuccess","onError","file","onProgress","fmData","FormData","config","headers","onUploadProgress","event","percent","Math","floor","loaded","total","setTimeout","append","res","post","console","log","data","error","message","type","err","Error","handleOnChange","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Upload, Progress } from 'antd';\nimport Notification from '../../global/Notification';\nimport './styles.css';\nimport { URLbase } from '../../../Api/URLbase';\n\nconst UploadProduct = ({ fileList, setFileList }) => {\n  const [defaultFileList, setDefaultFileList] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const uploadImage = async (options) => {\n    const { onSuccess, onError, file, onProgress } = options;\n\n    const fmData = new FormData();\n    const config = {\n      headers: { 'content-type': 'multipart/form-data' },\n      onUploadProgress: (event) => {\n        const percent = Math.floor((event.loaded / event.total) * 100);\n        setProgress(percent);\n        if (percent === 100) {\n          setTimeout(() => setProgress(0), 1000);\n        }\n        onProgress({ percent: (event.loaded / event.total) * 100 });\n      },\n    };\n    fmData.append('image', file);\n    try {\n      const res = await axios.post(`${URLbase}/api/products/upload`, fmData, config);\n      console.log(res, 'res');\n      if (!res.data.error) {\n        Notification({\n          message: 'Producto guardado de forma existosa',\n          type: 'success',\n        });\n        setFileList(res.data);\n        onSuccess('Ok');\n      } else {\n        if (res.data.error === 'No token, authorization denied') {\n          Notification({\n            message: 'Debe iniciar sesion para poder cargar productos',\n            type: 'error',\n          });\n        }\n        if (res.data.error === 'Token is no valid') {\n          Notification({\n            message: 'Problemas de inicio de sesion, debe inicar sesion nuevamente',\n            type: 'error',\n          });\n        }\n      }\n\n      console.log('server res: ', res);\n    } catch (err) {\n      console.log('Eroor: ', err);\n      const error = new Error('Some error');\n      onError({ err });\n    }\n  };\n\n  const handleOnChange = ({ file, fileList, event }) => {\n    setDefaultFileList(fileList);\n  };\n\n  return (\n    <>\n      <div className='container'>\n        <Upload\n          accept='image/*'\n          customRequest={uploadImage}\n          onChange={handleOnChange}\n          listType='picture-card'\n          defaultFileList={defaultFileList}\n          className='image-upload-grid'>\n          {defaultFileList.length >= 1 ? null : <div>Upload Button</div>}\n        </Upload>\n        {progress > 0 ? <Progress percent={progress} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport default UploadProduct;\n"]},"metadata":{},"sourceType":"module"}