{"ast":null,"code":"var _jsxFileName = \"/Users/robertocandales/Documents/ecommerce/frontend/src/Components/global/Upload/UploadProduct.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios'; //import { Upload, Button } from 'antd';\n\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Upload, Progress } from 'antd';\nimport './styles.css';\n\nconst UploadProduct = ({\n  fileList,\n  setFileList\n}) => {\n  //  console.log(fileList, 'fileList');\n  //  const props2 = {\n  //    action: setFileList(setFileList),\n  //    listType: 'picture',\n  //    defaultFileList: [...fileList],\n  //    className: 'upload-list-inline',\n  //  };\n  //  console.log(fileList);\n  const [defaultFileList, setDefaultFileList] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const uploadImage = async options => {\n    const {\n      onSuccess,\n      onError,\n      file,\n      onProgress\n    } = options;\n    const fmData = new FormData();\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      },\n      onUploadProgress: event => {\n        const percent = Math.floor(event.loaded / event.total * 100);\n        setProgress(percent);\n\n        if (percent === 100) {\n          setTimeout(() => setProgress(0), 1000);\n        }\n\n        onProgress({\n          percent: event.loaded / event.total * 100\n        });\n      }\n    };\n    fmData.append('image', file);\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/products/upload', fmData, config);\n      console.log(res, 'res');\n      setFileList(res);\n      onSuccess('Ok');\n      console.log('server res: ', res);\n    } catch (err) {\n      console.log('Eroor: ', err);\n      const error = new Error('Some error');\n      onError({\n        err\n      });\n    }\n  };\n\n  const handleOnChange = ({\n    file,\n    fileList,\n    event\n  }) => {\n    // console.log(file, fileList, event);\n    //Using Hooks to update the state to the current filelist\n    setDefaultFileList(fileList); //filelist - [{uid: \"-1\",url:'Some url to image'}]\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    accept: \"image/*\",\n    customRequest: uploadImage,\n    onChange: handleOnChange,\n    listType: \"picture-card\",\n    defaultFileList: defaultFileList,\n    className: \"image-upload-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, defaultFileList.length >= 1 ? null : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 49\n    }\n  }, \"Upload Button\")), progress > 0 ? /*#__PURE__*/React.createElement(Progress, {\n    percent: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }) : null));\n};\n\nexport default UploadProduct;","map":{"version":3,"sources":["/Users/robertocandales/Documents/ecommerce/frontend/src/Components/global/Upload/UploadProduct.js"],"names":["React","useState","axios","UploadOutlined","Upload","Progress","UploadProduct","fileList","setFileList","defaultFileList","setDefaultFileList","progress","setProgress","uploadImage","options","onSuccess","onError","file","onProgress","fmData","FormData","config","headers","onUploadProgress","event","percent","Math","floor","loaded","total","setTimeout","append","res","post","console","log","err","error","Error","handleOnChange","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n//import { Upload, Button } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Upload, Progress } from 'antd';\n\nimport './styles.css';\n\nconst UploadProduct = ({ fileList, setFileList }) => {\n  //  console.log(fileList, 'fileList');\n  //  const props2 = {\n  //    action: setFileList(setFileList),\n  //    listType: 'picture',\n  //    defaultFileList: [...fileList],\n  //    className: 'upload-list-inline',\n  //  };\n  //  console.log(fileList);\n  const [defaultFileList, setDefaultFileList] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const uploadImage = async (options) => {\n    const { onSuccess, onError, file, onProgress } = options;\n\n    const fmData = new FormData();\n    const config = {\n      headers: { 'content-type': 'multipart/form-data' },\n      onUploadProgress: (event) => {\n        const percent = Math.floor((event.loaded / event.total) * 100);\n        setProgress(percent);\n        if (percent === 100) {\n          setTimeout(() => setProgress(0), 1000);\n        }\n        onProgress({ percent: (event.loaded / event.total) * 100 });\n      },\n    };\n    fmData.append('image', file);\n    try {\n      const res = await axios.post('http://localhost:5000/api/products/upload', fmData, config);\n      console.log(res, 'res');\n      setFileList(res);\n      onSuccess('Ok');\n      console.log('server res: ', res);\n    } catch (err) {\n      console.log('Eroor: ', err);\n      const error = new Error('Some error');\n      onError({ err });\n    }\n  };\n\n  const handleOnChange = ({ file, fileList, event }) => {\n    // console.log(file, fileList, event);\n    //Using Hooks to update the state to the current filelist\n    setDefaultFileList(fileList);\n    //filelist - [{uid: \"-1\",url:'Some url to image'}]\n  };\n\n  return (\n    <>\n      {/*<Upload {...props2}>\n        <Button>\n          <UploadOutlined /> Imagen\n        </Button>\n      </Upload>*/}\n      <div class='container'>\n        <Upload\n          accept='image/*'\n          customRequest={uploadImage}\n          onChange={handleOnChange}\n          listType='picture-card'\n          defaultFileList={defaultFileList}\n          className='image-upload-grid'>\n          {defaultFileList.length >= 1 ? null : <div>Upload Button</div>}\n        </Upload>\n        {progress > 0 ? <Progress percent={progress} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport default UploadProduct;\n"]},"metadata":{},"sourceType":"module"}