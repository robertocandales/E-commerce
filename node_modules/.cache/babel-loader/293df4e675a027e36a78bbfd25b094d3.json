{"ast":null,"code":"var _jsxFileName = \"/Users/robertocandales/Documents/ecommerce/frontend/src/Components/global/Upload/UploadProduct.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Upload, Progress } from 'antd';\nimport Notification from '../../global/Notification';\nimport './styles.css';\nimport { URLbase } from '../../../Api/URLbase';\nimport { useSelector } from 'react-redux';\n\nconst UploadProduct = ({\n  fileList,\n  setFileList,\n  setHhumbUrl,\n  edit = false\n}) => {\n  const {\n    token\n  } = useSelector(store => store.login.login);\n  const [defaultFileList, setDefaultFileList] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const uploadImage = async options => {\n    const {\n      onSuccess,\n      onError,\n      file,\n      onProgress\n    } = options;\n    const formData = new FormData();\n    console.log(file, 'file');\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n        'X-Auth-Token': token\n      },\n      onUploadProgress: event => {\n        const percent = Math.floor(event.loaded / event.total * 100);\n        setProgress(percent);\n\n        if (percent === 100) {\n          setTimeout(() => setProgress(0), 1000);\n        }\n\n        onProgress({\n          percent: event.loaded / event.total * 100\n        });\n      }\n    };\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post(`${URLbase}/api/products/upload`, formData, config);\n\n      if (!res.data.error) {\n        Notification({\n          message: 'Imagen Cargada',\n          type: 'success'\n        });\n        setFileList(res.data.filename);\n        onSuccess('Ok');\n      } else {\n        if (res.data.error === 'No token, authorization denied') {\n          Notification({\n            message: 'Debe iniciar sesion para cargar la imagen',\n            type: 'error'\n          });\n        }\n\n        if (res.data.error === 'Token is no valid') {\n          Notification({\n            message: 'Problemas de inicio de sesion, debe inicar sesion nuevamente',\n            type: 'error'\n          });\n        }\n      }\n\n      console.log('server res: ', res);\n    } catch (err) {\n      console.log('Eroor: ', err);\n      const error = new Error('Some error');\n      onError({\n        err\n      });\n    }\n  };\n\n  const handleOnChange = ({\n    file,\n    fileList,\n    event\n  }) => {\n    setDefaultFileList(fileList);\n    setHhumbUrl(fileList[0]);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    type: \"file\",\n    name: \"file\",\n    accept: \"image/*\",\n    customRequest: uploadImage,\n    onChange: handleOnChange,\n    listType: \"picture-card\",\n    defaultFileList: defaultFileList,\n    className: \"image-upload-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, defaultFileList.length >= 1 ? null : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 49\n    }\n  }, \"Upload Button\")), progress > 0 ? /*#__PURE__*/React.createElement(Progress, {\n    percent: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }) : null));\n};\n\nexport default UploadProduct;","map":{"version":3,"sources":["/Users/robertocandales/Documents/ecommerce/frontend/src/Components/global/Upload/UploadProduct.js"],"names":["React","useState","axios","Upload","Progress","Notification","URLbase","useSelector","UploadProduct","fileList","setFileList","setHhumbUrl","edit","token","store","login","defaultFileList","setDefaultFileList","progress","setProgress","uploadImage","options","onSuccess","onError","file","onProgress","formData","FormData","console","log","config","headers","onUploadProgress","event","percent","Math","floor","loaded","total","setTimeout","append","res","post","data","error","message","type","filename","err","Error","handleOnChange","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Upload, Progress } from 'antd';\nimport Notification from '../../global/Notification';\nimport './styles.css';\nimport { URLbase } from '../../../Api/URLbase';\nimport { useSelector } from 'react-redux';\n\nconst UploadProduct = ({ fileList, setFileList, setHhumbUrl, edit = false }) => {\n  const { token } = useSelector((store) => store.login.login);\n  const [defaultFileList, setDefaultFileList] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const uploadImage = async (options) => {\n    const { onSuccess, onError, file, onProgress } = options;\n    const formData = new FormData();\n    console.log(file, 'file');\n    const config = {\n      headers: { 'content-type': 'multipart/form-data', 'X-Auth-Token': token },\n      onUploadProgress: (event) => {\n        const percent = Math.floor((event.loaded / event.total) * 100);\n        setProgress(percent);\n        if (percent === 100) {\n          setTimeout(() => setProgress(0), 1000);\n        }\n        onProgress({ percent: (event.loaded / event.total) * 100 });\n      },\n    };\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post(`${URLbase}/api/products/upload`, formData, config);\n      if (!res.data.error) {\n        Notification({\n          message: 'Imagen Cargada',\n          type: 'success',\n        });\n        setFileList(res.data.filename);\n        onSuccess('Ok');\n      } else {\n        if (res.data.error === 'No token, authorization denied') {\n          Notification({\n            message: 'Debe iniciar sesion para cargar la imagen',\n            type: 'error',\n          });\n        }\n        if (res.data.error === 'Token is no valid') {\n          Notification({\n            message: 'Problemas de inicio de sesion, debe inicar sesion nuevamente',\n            type: 'error',\n          });\n        }\n      }\n\n      console.log('server res: ', res);\n    } catch (err) {\n      console.log('Eroor: ', err);\n      const error = new Error('Some error');\n      onError({ err });\n    }\n  };\n\n  const handleOnChange = ({ file, fileList, event }) => {\n    setDefaultFileList(fileList);\n    setHhumbUrl(fileList[0]);\n  };\n\n  return (\n    <>\n      <div className='container'>\n        <Upload\n          type='file'\n          name='file'\n          accept='image/*'\n          customRequest={uploadImage}\n          onChange={handleOnChange}\n          listType='picture-card'\n          defaultFileList={defaultFileList}\n          className='image-upload-grid'>\n          {defaultFileList.length >= 1 ? null : <div>Upload Button</div>}\n        </Upload>\n        {progress > 0 ? <Progress percent={progress} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport default UploadProduct;\n"]},"metadata":{},"sourceType":"module"}