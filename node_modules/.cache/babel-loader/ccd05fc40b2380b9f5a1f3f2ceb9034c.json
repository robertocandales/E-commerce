{"ast":null,"code":"var _jsxFileName = \"/Users/robertocandales/Documents/ecommerce/frontend/src/Components/login/loginComponents/Login/Login.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Button, Typography } from 'antd';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { authLogin } from '../../../../Api/ProductsApi';\nimport { WrapperLogin, WrapperTitle, MainContainer, Registrate, CustomInput, CustomInputPassword, CustomCard } from './styled';\nimport { LoginAction } from '../../../../Redux/Actions/LoginAction';\nimport Notification from '../../../global/Notification';\nconst {\n  Title,\n  Text\n} = Typography;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst Login = ({\n  setShowComponent\n}) => {\n  const [loading, setloading] = useState(false);\n  const [data, setdata] = useState('');\n  const dispatch = useDispatch();\n\n  const onFinish = async values => {\n    setloading(true);\n    console.log('Success:', values);\n\n    try {\n      const res = await authLogin(values);\n      console.log(res, 'res');\n\n      if (!res.data.error) {\n        Notification({\n          type: 'success',\n          message: 'Bienvenidos'\n        });\n        setdata(res.data); //redirect({ route: '/envios-en-curso' });\n\n        await dispatch(LoginAction(res.data));\n        console.log(res, 'error');\n        setloading(false);\n      } else {\n        if (res.data.error === 'please enter all fields') {\n          Notification({\n            type: 'error',\n            message: 'Por favor ingrese todos los campos.'\n          });\n          setloading(false);\n        } else {\n          Notification({\n            type: 'error',\n            message: 'El usuario no existe, por favor, Registrarse'\n          });\n          setloading(false);\n        }\n\n        setloading(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Registrate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    type: \"secondary\",\n    style: {\n      marginRight: '-0px',\n      marginTop: '-20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"\\xBFNo tienes cuenta?\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    style: {\n      marginTop: '-25px',\n      color: 'orange',\n      marginRight: '-0px'\n    },\n    onClick: () => setShowComponent({\n      Login: false,\n      Recover: false,\n      Signup: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Registrate\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(WrapperTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    type: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Iniciar Sesion\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/robertocandales/Documents/ecommerce/frontend/src/Components/login/loginComponents/Login/Login.js"],"names":["React","useState","useDispatch","Form","Button","Typography","PoweroffOutlined","authLogin","WrapperLogin","WrapperTitle","MainContainer","Registrate","CustomInput","CustomInputPassword","CustomCard","LoginAction","Notification","Title","Text","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","setShowComponent","loading","setloading","data","setdata","dispatch","onFinish","values","console","log","res","error","type","message","onFinishFailed","errorInfo","marginRight","marginTop","color","Recover","Signup"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Button, Typography } from 'antd';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { authLogin } from '../../../../Api/ProductsApi';\nimport {\n  WrapperLogin,\n  WrapperTitle,\n  MainContainer,\n  Registrate,\n  CustomInput,\n  CustomInputPassword,\n  CustomCard,\n} from './styled';\nimport { LoginAction } from '../../../../Redux/Actions/LoginAction';\nimport Notification from '../../../global/Notification';\nconst { Title, Text } = Typography;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Login = ({ setShowComponent }) => {\n  const [loading, setloading] = useState(false);\n  const [data, setdata] = useState('');\n  const dispatch = useDispatch();\n\n  const onFinish = async (values) => {\n    setloading(true);\n    console.log('Success:', values);\n    try {\n      const res = await authLogin(values);\n      console.log(res, 'res');\n      if (!res.data.error) {\n        Notification({\n          type: 'success',\n          message: 'Bienvenidos',\n        });\n        setdata(res.data);\n        //redirect({ route: '/envios-en-curso' });\n        await dispatch(LoginAction(res.data));\n        console.log(res, 'error');\n        setloading(false);\n      } else {\n        if (res.data.error === 'please enter all fields') {\n          Notification({\n            type: 'error',\n            message: 'Por favor ingrese todos los campos.',\n          });\n          setloading(false);\n        } else {\n          Notification({\n            type: 'error',\n            message: 'El usuario no existe, por favor, Registrarse',\n          });\n          setloading(false);\n        }\n\n        setloading(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <MainContainer>\n      <CustomCard>\n        <Registrate>\n          <Text type='secondary' style={{ marginRight: '-0px', marginTop: '-20px' }}>\n            Â¿No tienes cuenta?\n          </Text>{' '}\n          <Button\n            type='link'\n            style={{ marginTop: '-25px', color: 'orange', marginRight: '-0px' }}\n            onClick={() => setShowComponent({ Login: false, Recover: false, Signup: true })}>\n            Registrate\n          </Button>\n        </Registrate>\n        <br />\n\n        <WrapperTitle>\n          <Title type='secondary'>Iniciar Sesion</Title>\n        </WrapperTitle>\n\n        {/*<WrapperLogin>\n          <Form\n            {...layout}\n            name='basic'\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}>\n            <Form.Item\n              label=''\n              name='email'\n              rules={[{ required: true, message: 'Please input your username!' }]}>\n              <CustomInput placeholder='Usuario' />\n            </Form.Item>\n\n            <Form.Item\n              label=''\n              name='password'\n              rules={[{ required: true, message: 'Please input your password!' }]}>\n              <CustomInputPassword placeholder='Clave' />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button\n                type='primary'\n                htmlType='submit'\n                ghost\n                style={{ color: '#111d2c' }}\n                loading={loading}>\n                Iniciar SesiÃ³n\n              </Button>\n            </Form.Item>\n          </Form>\n\n          <Button\n            style={{ color: 'orange' }}\n            type='link'\n            onClick={() => setShowComponent({ Login: false, Recover: true, Signup: false })}>\n            Â¿Olvidaste Contrasena?\n          </Button>\n        </WrapperLogin>*/}\n      </CustomCard>\n    </MainContainer>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}