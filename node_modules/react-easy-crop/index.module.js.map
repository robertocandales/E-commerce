{"version":3,"file":"index.module.js","sources":["../src/helpers.ts","../src/index.tsx"],"sourcesContent":["import { Area, MediaSize, Point, Size } from './types'\n\n/**\n * Compute the dimension of the crop area based on media size,\n * aspect ratio and optionally rotation\n */\nexport function getCropSize(\n  mediaWidth: number,\n  mediaHeight: number,\n  containerWidth: number,\n  containerHeight: number,\n  aspect: number,\n  rotation = 0\n): Size {\n  const { width, height } = translateSize(mediaWidth, mediaHeight, rotation)\n  const fittingWidth = Math.min(width, containerWidth)\n  const fittingHeight = Math.min(height, containerHeight)\n\n  if (fittingWidth > fittingHeight * aspect) {\n    return {\n      width: fittingHeight * aspect,\n      height: fittingHeight,\n    }\n  }\n\n  return {\n    width: fittingWidth,\n    height: fittingWidth / aspect,\n  }\n}\n\n/**\n * Ensure a new media position stays in the crop area.\n */\nexport function restrictPosition(\n  position: Point,\n  mediaSize: Size,\n  cropSize: Size,\n  zoom: number,\n  rotation = 0\n): Point {\n  const { width, height } = translateSize(mediaSize.width, mediaSize.height, rotation)\n\n  return {\n    x: restrictPositionCoord(position.x, width, cropSize.width, zoom),\n    y: restrictPositionCoord(position.y, height, cropSize.height, zoom),\n  }\n}\n\nfunction restrictPositionCoord(\n  position: number,\n  mediaSize: number,\n  cropSize: number,\n  zoom: number\n): number {\n  const maxPosition = (mediaSize * zoom) / 2 - cropSize / 2\n  return Math.min(maxPosition, Math.max(position, -maxPosition))\n}\n\nexport function getDistanceBetweenPoints(pointA: Point, pointB: Point) {\n  return Math.sqrt(Math.pow(pointA.y - pointB.y, 2) + Math.pow(pointA.x - pointB.x, 2))\n}\n\nexport function getRotationBetweenPoints(pointA: Point, pointB: Point) {\n  return (Math.atan2(pointB.y - pointA.y, pointB.x - pointA.x) * 180) / Math.PI\n}\n\n/**\n * Compute the output cropped area of the media in percentages and pixels.\n * x/y are the top-left coordinates on the src media\n */\nexport function computeCroppedArea(\n  crop: Point,\n  mediaSize: MediaSize,\n  cropSize: Size,\n  aspect: number,\n  zoom: number,\n  rotation = 0,\n  restrictPosition = true\n): { croppedAreaPercentages: Area; croppedAreaPixels: Area } {\n  // if the media is rotated by the user, we cannot limit the position anymore\n  // as it might need to be negative.\n  const limitAreaFn = restrictPosition && rotation === 0 ? limitArea : noOp\n  const croppedAreaPercentages = {\n    x: limitAreaFn(\n      100,\n      (((mediaSize.width - cropSize.width / zoom) / 2 - crop.x / zoom) / mediaSize.width) * 100\n    ),\n    y: limitAreaFn(\n      100,\n      (((mediaSize.height - cropSize.height / zoom) / 2 - crop.y / zoom) / mediaSize.height) * 100\n    ),\n    width: limitAreaFn(100, ((cropSize.width / mediaSize.width) * 100) / zoom),\n    height: limitAreaFn(100, ((cropSize.height / mediaSize.height) * 100) / zoom),\n  }\n\n  // we compute the pixels size naively\n  const widthInPixels = Math.round(\n    limitAreaFn(\n      mediaSize.naturalWidth,\n      (croppedAreaPercentages.width * mediaSize.naturalWidth) / 100\n    )\n  )\n  const heightInPixels = Math.round(\n    limitAreaFn(\n      mediaSize.naturalHeight,\n      (croppedAreaPercentages.height * mediaSize.naturalHeight) / 100\n    )\n  )\n  const isImgWiderThanHigh = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect\n\n  // then we ensure the width and height exactly match the aspect (to avoid rounding approximations)\n  // if the media is wider than high, when zoom is 0, the crop height will be equals to iamge height\n  // thus we want to compute the width from the height and aspect for accuracy.\n  // Otherwise, we compute the height from width and aspect.\n  const sizePixels = isImgWiderThanHigh\n    ? {\n        width: Math.round(heightInPixels * aspect),\n        height: heightInPixels,\n      }\n    : {\n        width: widthInPixels,\n        height: Math.round(widthInPixels / aspect),\n      }\n  const croppedAreaPixels = {\n    ...sizePixels,\n    x: Math.round(\n      limitAreaFn(\n        mediaSize.naturalWidth - sizePixels.width,\n        (croppedAreaPercentages.x * mediaSize.naturalWidth) / 100\n      )\n    ),\n    y: Math.round(\n      limitAreaFn(\n        mediaSize.naturalHeight - sizePixels.height,\n        (croppedAreaPercentages.y * mediaSize.naturalHeight) / 100\n      )\n    ),\n  }\n  return { croppedAreaPercentages, croppedAreaPixels }\n}\n\n/**\n * Ensure the returned value is between 0 and max\n */\nfunction limitArea(max: number, value: number): number {\n  return Math.min(max, Math.max(0, value))\n}\n\nfunction noOp(_max: number, value: number) {\n  return value\n}\n\n/**\n * Compute the crop and zoom from the croppedAreaPixels\n */\nfunction getZoomFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize?: Size\n): number {\n  const mediaZoom = mediaSize.width / mediaSize.naturalWidth\n\n  if (cropSize) {\n    const isHeightMaxSize = cropSize.height > cropSize.width\n    return isHeightMaxSize\n      ? cropSize.height / mediaZoom / croppedAreaPixels.height\n      : cropSize.width / mediaZoom / croppedAreaPixels.width\n  }\n\n  const aspect = croppedAreaPixels.width / croppedAreaPixels.height\n  const isHeightMaxSize = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect\n  return isHeightMaxSize\n    ? mediaSize.naturalHeight / croppedAreaPixels.height\n    : mediaSize.naturalWidth / croppedAreaPixels.width\n}\n\n/**\n * Compute the crop and zoom from the croppedAreaPixels\n */\nexport function getInitialCropFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize?: Size\n): { crop: Point; zoom: number } {\n  const mediaZoom = mediaSize.width / mediaSize.naturalWidth\n\n  const zoom = getZoomFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize)\n\n  const cropZoom = mediaZoom * zoom\n\n  const crop = {\n    x: ((mediaSize.naturalWidth - croppedAreaPixels.width) / 2 - croppedAreaPixels.x) * cropZoom,\n    y: ((mediaSize.naturalHeight - croppedAreaPixels.height) / 2 - croppedAreaPixels.y) * cropZoom,\n  }\n  return { crop, zoom }\n}\n\n/**\n * Return the point that is the center of point a and b\n */\nexport function getCenter(a: Point, b: Point): Point {\n  return {\n    x: (b.x + a.x) / 2,\n    y: (b.y + a.y) / 2,\n  }\n}\n\n/**\n *\n * Returns an x,y point once rotated around xMid,yMid\n */\nexport function rotateAroundMidPoint(\n  x: number,\n  y: number,\n  xMid: number,\n  yMid: number,\n  degrees: number\n): [number, number] {\n  const cos = Math.cos\n  const sin = Math.sin\n  const radian = (degrees * Math.PI) / 180 // Convert to radians\n  // Subtract midpoints, so that midpoint is translated to origin\n  // and add it in the end again\n  const xr = (x - xMid) * cos(radian) - (y - yMid) * sin(radian) + xMid\n  const yr = (x - xMid) * sin(radian) + (y - yMid) * cos(radian) + yMid\n\n  return [xr, yr]\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function translateSize(width: number, height: number, rotation: number): Size {\n  const centerX = width / 2\n  const centerY = height / 2\n\n  const outerBounds = [\n    rotateAroundMidPoint(0, 0, centerX, centerY, rotation),\n    rotateAroundMidPoint(width, 0, centerX, centerY, rotation),\n    rotateAroundMidPoint(width, height, centerX, centerY, rotation),\n    rotateAroundMidPoint(0, height, centerX, centerY, rotation),\n  ]\n\n  const minX = Math.min(...outerBounds.map(p => p[0]))\n  const maxX = Math.max(...outerBounds.map(p => p[0]))\n  const minY = Math.min(...outerBounds.map(p => p[1]))\n  const maxY = Math.max(...outerBounds.map(p => p[1]))\n\n  return { width: maxX - minX, height: maxY - minY }\n}\n\n/**\n * Combine multiple class names into a single string.\n */\nexport function classNames(...args: (boolean | string | number | undefined | void | null)[]) {\n  return args\n    .filter(value => {\n      if (typeof value === 'string' && value.length > 0) {\n        return true\n      }\n\n      return false\n    })\n    .join(' ')\n    .trim()\n}\n","import React from 'react'\nimport { Area, MediaSize, Point, Size } from './types'\nimport {\n  getCropSize,\n  restrictPosition,\n  getDistanceBetweenPoints,\n  getRotationBetweenPoints,\n  computeCroppedArea,\n  getCenter,\n  getInitialCropFromCroppedAreaPixels,\n  classNames,\n} from './helpers'\nimport cssStyles from './styles.css'\n\ntype Props = {\n  image?: string\n  video?: string\n  transform?: string\n  crop: Point\n  zoom: number\n  rotation: number\n  aspect: number\n  minZoom: number\n  maxZoom: number\n  cropShape: 'rect' | 'round'\n  cropSize?: Size\n  showGrid?: boolean\n  zoomSpeed: number\n  zoomWithScroll?: boolean\n  onCropChange: (location: Point) => void\n  onZoomChange?: (zoom: number) => void\n  onRotationChange?: (rotation: number) => void\n  onCropComplete?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onInteractionStart?: () => void\n  onInteractionEnd?: () => void\n  onMediaLoaded?: (mediaSize: MediaSize) => void\n  style: {\n    containerStyle?: React.CSSProperties\n    mediaStyle?: React.CSSProperties\n    cropAreaStyle?: React.CSSProperties\n  }\n  classes: {\n    containerClassName?: string\n    mediaClassName?: string\n    cropAreaClassName?: string\n  }\n  restrictPosition: boolean\n  initialCroppedAreaPixels?: Area\n  mediaProps: React.ImgHTMLAttributes<HTMLElement> | React.VideoHTMLAttributes<HTMLElement>\n  disableAutomaticStylesInjection?: boolean\n}\n\ntype State = {\n  cropSize: Size | null\n  hasWheelJustStarted: boolean\n}\n\nconst MIN_ZOOM = 1\nconst MAX_ZOOM = 3\n\nclass Cropper extends React.Component<Props, State> {\n  static defaultProps = {\n    zoom: 1,\n    rotation: 0,\n    aspect: 4 / 3,\n    maxZoom: MAX_ZOOM,\n    minZoom: MIN_ZOOM,\n    cropShape: 'rect',\n    showGrid: true,\n    style: {},\n    classes: {},\n    mediaProps: {},\n    zoomSpeed: 1,\n    restrictPosition: true,\n    zoomWithScroll: true,\n  }\n\n  imageRef: HTMLImageElement | null = null\n  videoRef: HTMLVideoElement | null = null\n  containerRef: HTMLDivElement | null = null\n  styleRef: HTMLStyleElement | null = null\n  containerRect: DOMRect | null = null\n  mediaSize: MediaSize = { width: 0, height: 0, naturalWidth: 0, naturalHeight: 0 }\n  dragStartPosition: Point = { x: 0, y: 0 }\n  dragStartCrop: Point = { x: 0, y: 0 }\n  lastPinchDistance = 0\n  lastPinchRotation = 0\n  rafDragTimeout: number | null = null\n  rafPinchTimeout: number | null = null\n  wheelTimer: number | null = null\n\n  state: State = {\n    cropSize: null,\n    hasWheelJustStarted: false,\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.props.zoomWithScroll &&\n        this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n      this.containerRef.addEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.addEventListener('gesturechange', this.preventZoomSafari)\n    }\n\n    if (!this.props.disableAutomaticStylesInjection) {\n      this.styleRef = document.createElement('style')\n      this.styleRef.setAttribute('type', 'text/css')\n      this.styleRef.innerHTML = cssStyles\n      document.head.appendChild(this.styleRef)\n    }\n\n    // when rendered via SSR, the image can already be loaded and its onLoad callback will never be called\n    if (this.imageRef && this.imageRef.complete) {\n      this.onMediaLoad()\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.containerRef.removeEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.removeEventListener('gesturechange', this.preventZoomSafari)\n    }\n\n    if (this.styleRef) {\n      this.styleRef.remove()\n    }\n\n    this.cleanEvents()\n    this.props.zoomWithScroll && this.clearScrollEvent()\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.rotation !== this.props.rotation) {\n      this.computeSizes()\n      this.recomputeCropPosition()\n    } else if (prevProps.aspect !== this.props.aspect) {\n      this.computeSizes()\n    } else if (prevProps.zoom !== this.props.zoom) {\n      this.recomputeCropPosition()\n    } else if (\n      prevProps.cropSize?.height !== this.props.cropSize?.height ||\n      prevProps.cropSize?.width !== this.props.cropSize?.width\n    ) {\n      this.computeSizes()\n    }\n    if (prevProps.zoomWithScroll !== this.props.zoomWithScroll && this.containerRef) {\n      this.props.zoomWithScroll\n        ? this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n        : this.clearScrollEvent()\n    }\n  }\n\n  // this is to prevent Safari on iOS >= 10 to zoom the page\n  preventZoomSafari = (e: Event) => e.preventDefault()\n\n  cleanEvents = () => {\n    document.removeEventListener('mousemove', this.onMouseMove)\n    document.removeEventListener('mouseup', this.onDragStopped)\n    document.removeEventListener('touchmove', this.onTouchMove)\n    document.removeEventListener('touchend', this.onDragStopped)\n  }\n\n  clearScrollEvent = () => {\n    if (this.containerRef) this.containerRef.removeEventListener('wheel', this.onWheel)\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n  }\n\n  onMediaLoad = () => {\n    this.computeSizes()\n    this.emitCropData()\n    this.setInitialCrop()\n\n    if (this.props.onMediaLoaded) {\n      this.props.onMediaLoaded(this.mediaSize)\n    }\n  }\n\n  setInitialCrop = () => {\n    const { initialCroppedAreaPixels, cropSize } = this.props\n\n    if (!initialCroppedAreaPixels) {\n      return\n    }\n\n    const { crop, zoom } = getInitialCropFromCroppedAreaPixels(\n      initialCroppedAreaPixels,\n      this.mediaSize,\n      cropSize\n    )\n    this.props.onCropChange(crop)\n    this.props.onZoomChange && this.props.onZoomChange(zoom)\n  }\n\n  getAspect() {\n    const { cropSize, aspect } = this.props\n    if (cropSize) {\n      return cropSize.width / cropSize.height\n    }\n    return aspect\n  }\n\n  computeSizes = () => {\n    const mediaRef = this.imageRef || this.videoRef\n    if (mediaRef && this.containerRef) {\n      this.containerRect = this.containerRef.getBoundingClientRect()\n\n      this.mediaSize = {\n        width: mediaRef.offsetWidth,\n        height: mediaRef.offsetHeight,\n        naturalWidth: this.imageRef?.naturalWidth || this.videoRef?.videoWidth || 0,\n        naturalHeight: this.imageRef?.naturalHeight || this.videoRef?.videoHeight || 0,\n      }\n      const cropSize = this.props.cropSize\n        ? this.props.cropSize\n        : getCropSize(\n            mediaRef.offsetWidth,\n            mediaRef.offsetHeight,\n            this.containerRect.width,\n            this.containerRect.height,\n            this.props.aspect,\n            this.props.rotation\n          )\n      this.setState({ cropSize }, this.recomputeCropPosition)\n    }\n  }\n\n  static getMousePoint = (e: MouseEvent | React.MouseEvent) => ({\n    x: Number(e.clientX),\n    y: Number(e.clientY),\n  })\n\n  static getTouchPoint = (touch: Touch | React.Touch) => ({\n    x: Number(touch.clientX),\n    y: Number(touch.clientY),\n  })\n\n  onMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault()\n    document.addEventListener('mousemove', this.onMouseMove)\n    document.addEventListener('mouseup', this.onDragStopped)\n    this.onDragStart(Cropper.getMousePoint(e))\n  }\n\n  onMouseMove = (e: MouseEvent) => this.onDrag(Cropper.getMousePoint(e))\n\n  onTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    document.addEventListener('touchmove', this.onTouchMove, { passive: false }) // iOS 11 now defaults to passive: true\n    document.addEventListener('touchend', this.onDragStopped)\n    if (e.touches.length === 2) {\n      this.onPinchStart(e)\n    } else if (e.touches.length === 1) {\n      this.onDragStart(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    // Prevent whole page from scrolling on iOS.\n    e.preventDefault()\n    if (e.touches.length === 2) {\n      this.onPinchMove(e)\n    } else if (e.touches.length === 1) {\n      this.onDrag(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onDragStart = ({ x, y }: Point) => {\n    this.dragStartPosition = { x, y }\n    this.dragStartCrop = { ...this.props.crop }\n    this.props.onInteractionStart?.()\n  }\n\n  onDrag = ({ x, y }: Point) => {\n    if (this.rafDragTimeout) window.cancelAnimationFrame(this.rafDragTimeout)\n\n    this.rafDragTimeout = window.requestAnimationFrame(() => {\n      if (!this.state.cropSize) return\n      if (x === undefined || y === undefined) return\n      const offsetX = x - this.dragStartPosition.x\n      const offsetY = y - this.dragStartPosition.y\n      const requestedPosition = {\n        x: this.dragStartCrop.x + offsetX,\n        y: this.dragStartCrop.y + offsetY,\n      }\n\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            this.props.zoom,\n            this.props.rotation\n          )\n        : requestedPosition\n      this.props.onCropChange(newPosition)\n    })\n  }\n\n  onDragStopped = () => {\n    this.cleanEvents()\n    this.emitCropData()\n    this.props.onInteractionEnd?.()\n  }\n\n  onPinchStart(e: React.TouchEvent<HTMLDivElement>) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    this.lastPinchDistance = getDistanceBetweenPoints(pointA, pointB)\n    this.lastPinchRotation = getRotationBetweenPoints(pointA, pointB)\n    this.onDragStart(getCenter(pointA, pointB))\n  }\n\n  onPinchMove(e: TouchEvent) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    const center = getCenter(pointA, pointB)\n    this.onDrag(center)\n\n    if (this.rafPinchTimeout) window.cancelAnimationFrame(this.rafPinchTimeout)\n    this.rafPinchTimeout = window.requestAnimationFrame(() => {\n      const distance = getDistanceBetweenPoints(pointA, pointB)\n      const newZoom = this.props.zoom * (distance / this.lastPinchDistance)\n      this.setNewZoom(newZoom, center)\n      this.lastPinchDistance = distance\n\n      const rotation = getRotationBetweenPoints(pointA, pointB)\n      const newRotation = this.props.rotation + (rotation - this.lastPinchRotation)\n      this.props.onRotationChange && this.props.onRotationChange(newRotation)\n      this.lastPinchRotation = rotation\n    })\n  }\n\n  onWheel = (e: WheelEvent) => {\n    e.preventDefault()\n    const point = Cropper.getMousePoint(e)\n    const newZoom = this.props.zoom - (e.deltaY * this.props.zoomSpeed) / 200\n    this.setNewZoom(newZoom, point)\n\n    if (!this.state.hasWheelJustStarted) {\n      this.setState({ hasWheelJustStarted: true }, () => this.props.onInteractionStart?.())\n    }\n\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n    this.wheelTimer = window.setTimeout(\n      () => this.setState({ hasWheelJustStarted: false }, () => this.props.onInteractionEnd?.()),\n      250\n    )\n  }\n\n  getPointOnContainer = ({ x, y }: Point) => {\n    if (!this.containerRect) {\n      throw new Error('The Cropper is not mounted')\n    }\n    return {\n      x: this.containerRect.width / 2 - (x - this.containerRect.left),\n      y: this.containerRect.height / 2 - (y - this.containerRect.top),\n    }\n  }\n\n  getPointOnMedia = ({ x, y }: Point) => {\n    const { crop, zoom } = this.props\n    return {\n      x: (x + crop.x) / zoom,\n      y: (y + crop.y) / zoom,\n    }\n  }\n\n  setNewZoom = (zoom: number, point: Point) => {\n    if (!this.state.cropSize || !this.props.onZoomChange) return\n\n    const zoomPoint = this.getPointOnContainer(point)\n    const zoomTarget = this.getPointOnMedia(zoomPoint)\n    const newZoom = Math.min(this.props.maxZoom, Math.max(zoom, this.props.minZoom))\n    const requestedPosition = {\n      x: zoomTarget.x * newZoom - zoomPoint.x,\n      y: zoomTarget.y * newZoom - zoomPoint.y,\n    }\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          requestedPosition,\n          this.mediaSize,\n          this.state.cropSize,\n          newZoom,\n          this.props.rotation\n        )\n      : requestedPosition\n\n    this.props.onCropChange(newPosition)\n    this.props.onZoomChange(newZoom)\n  }\n\n  emitCropData = () => {\n    if (!this.state.cropSize) return\n    // this is to ensure the crop is correctly restricted after a zoom back (https://github.com/ricardo-ch/react-easy-crop/issues/6)\n    const restrictedPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    const { croppedAreaPercentages, croppedAreaPixels } = computeCroppedArea(\n      restrictedPosition,\n      this.mediaSize,\n      this.state.cropSize,\n      this.getAspect(),\n      this.props.zoom,\n      this.props.rotation,\n      this.props.restrictPosition\n    )\n    this.props.onCropComplete &&\n      this.props.onCropComplete(croppedAreaPercentages, croppedAreaPixels)\n  }\n\n  recomputeCropPosition = () => {\n    if (!this.state.cropSize) return\n\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    this.props.onCropChange(newPosition)\n    this.emitCropData()\n  }\n\n  render() {\n    const {\n      image,\n      video,\n      mediaProps,\n      transform,\n      crop: { x, y },\n      rotation,\n      zoom,\n      cropShape,\n      showGrid,\n      style: { containerStyle, cropAreaStyle, mediaStyle },\n      classes: { containerClassName, cropAreaClassName, mediaClassName },\n    } = this.props\n\n    return (\n      <div\n        onMouseDown={this.onMouseDown}\n        onTouchStart={this.onTouchStart}\n        ref={el => (this.containerRef = el)}\n        data-testid=\"container\"\n        style={containerStyle}\n        className={classNames('reactEasyCrop_Container', containerClassName)}\n      >\n        {image ? (\n          <img\n            alt=\"\"\n            className={classNames('reactEasyCrop_Image', mediaClassName)}\n            {...(mediaProps as React.ImgHTMLAttributes<HTMLElement>)}\n            src={image}\n            ref={(el: HTMLImageElement) => (this.imageRef = el)}\n            style={{\n              ...mediaStyle,\n              transform:\n                transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n            }}\n            onLoad={this.onMediaLoad}\n          />\n        ) : (\n          video && (\n            <video\n              autoPlay\n              loop\n              muted={true}\n              className={classNames('reactEasyCrop_Video', mediaClassName)}\n              {...mediaProps}\n              src={video}\n              ref={(el: HTMLVideoElement) => (this.videoRef = el)}\n              onLoadedMetadata={this.onMediaLoad}\n              style={{\n                ...mediaStyle,\n                transform:\n                  transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n              }}\n              controls={false}\n            />\n          )\n        )}\n        {this.state.cropSize && (\n          <div\n            style={{\n              ...cropAreaStyle,\n              width: this.state.cropSize.width,\n              height: this.state.cropSize.height,\n            }}\n            data-testid=\"cropper\"\n            className={classNames(\n              'reactEasyCrop_CropArea',\n              cropShape === 'round' && 'reactEasyCrop_CropAreaRound',\n              showGrid && 'reactEasyCrop_CropAreaGrid',\n              cropAreaClassName\n            )}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Cropper\n"],"names":["getCropSize","mediaWidth","mediaHeight","containerWidth","containerHeight","aspect","rotation","_a","width","height","fittingWidth","Math","min","fittingHeight","restrictPosition","position","mediaSize","cropSize","zoom","x","restrictPositionCoord","y","maxPosition","max","getDistanceBetweenPoints","pointA","pointB","sqrt","pow","getRotationBetweenPoints","atan2","PI","computeCroppedArea","crop","limitAreaFn","limitArea","noOp","croppedAreaPercentages","widthInPixels","round","naturalWidth","heightInPixels","naturalHeight","isImgWiderThanHigh","sizePixels","croppedAreaPixels","value","_max","getZoomFromCroppedAreaPixels","mediaZoom","isHeightMaxSize_1","isHeightMaxSize","getInitialCropFromCroppedAreaPixels","cropZoom","getCenter","a","b","rotateAroundMidPoint","xMid","yMid","degrees","cos","sin","radian","xr","yr","translateSize","centerX","centerY","outerBounds","minX","map","p","maxX","minY","maxY","classNames","_i","args","filter","length","join","trim","MIN_ZOOM","MAX_ZOOM","__extends","_this","hasWheelJustStarted","e","preventDefault","document","removeEventListener","onMouseMove","onDragStopped","onTouchMove","containerRef","onWheel","wheelTimer","clearTimeout","computeSizes","emitCropData","setInitialCrop","props","onMediaLoaded","initialCroppedAreaPixels","_b","onCropChange","onZoomChange","mediaRef","imageRef","videoRef","containerRect","getBoundingClientRect","offsetWidth","offsetHeight","videoWidth","videoHeight","setState","recomputeCropPosition","addEventListener","onDragStart","Cropper","getMousePoint","onDrag","passive","touches","onPinchStart","getTouchPoint","onPinchMove","dragStartPosition","dragStartCrop","onInteractionStart","rafDragTimeout","window","cancelAnimationFrame","requestAnimationFrame","state","undefined","offsetX","offsetY","requestedPosition","newPosition","cleanEvents","onInteractionEnd","point","newZoom","deltaY","zoomSpeed","setNewZoom","setTimeout","Error","left","top","zoomPoint","getPointOnContainer","zoomTarget","getPointOnMedia","maxZoom","minZoom","restrictedPosition","onCropComplete","zoomWithScroll","preventZoomSafari","disableAutomaticStylesInjection","styleRef","createElement","setAttribute","innerHTML","cssStyles","head","appendChild","complete","onMediaLoad","remove","clearScrollEvent","prevProps","lastPinchDistance","lastPinchRotation","center","rafPinchTimeout","distance","newRotation","onRotationChange","image","video","mediaProps","transform","cropShape","showGrid","_c","containerStyle","cropAreaStyle","mediaStyle","_d","containerClassName","cropAreaClassName","mediaClassName","React","onMouseDown","onTouchStart","ref","el","style","className","alt","src","onLoad","autoPlay","loop","muted","onLoadedMetadata","controls","classes","Number","clientX","clientY","touch","Component"],"mappings":"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"}